

class PuntajeJugada{
  - puntos : float
  - multiplicador: float
  + Puntaje(float puntos, float multiplicador)
  
  + sumarPuntos(Int cantidad)
  + sumarAMultiplicador(Int cantidad)
  + multiplicarPuntos(Int cantidad)
  + multiplicarMultiplicador(int cantidad)
  + esMenorQue(Puntaje otroPuntaje): bool
  + agregarPuntosYMultiplicador(float puntos, float multiplicador)
  + sumarPuntaje(PuntajeJugada)
}

package Mejora {

interface IMejora{
  {abstract}  + aplicarAPuntaje(PuntajeJugada puntaje, int puntos, int multiplicador)
}

class MultiplicaMultiplicador implements IMejora{
  +MultiplicaMultiplicador()
}

class MultiplicaPuntos implements IMejora{
  + MultiplicaPuntos()
  }

class SumaAMultiplicador implements IMejora{
  + sumarAMultiplicador()
  }


class SumaPuntos implements IMejora{
  + SumaPuntos()
  }

class SumaPuntaje implements IMejora{
+ SumaPuntaje()
}
  
class Mejora{
  - puntos: int 
  - multiplicador : int 
  + Mejora(int puntos, int multiplicador)
  + setMejora(IMejora)
  + seAplicaAPuntaje(PuntajeJugada puntaje)
}
Mejora o-- IMejora : tiene un

}
PuntajeJugada <. IMejora : utiliza

